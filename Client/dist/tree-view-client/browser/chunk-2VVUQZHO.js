import{a as b,b as k}from"./chunk-JPMZM5FZ.js";import{a as M,c as N}from"./chunk-53ZY2XZQ.js";import{a as j}from"./chunk-VXZPXBXW.js";import"./chunk-34YXVSCO.js";import{b as P,e as _,h as I,p as E,r as L,s as T}from"./chunk-Z3YPYHBP.js";import"./chunk-TCOEHMSY.js";import{a as x,b as D}from"./chunk-7I5IRPV2.js";import{Dc as C,Ib as n,Jb as m,Kb as d,Mb as h,Nb as f,Ob as S,Pa as r,Ua as a,Za as g,ae as v,ce as y,re as A,sb as e,tb as i,zb as c}from"./chunk-R5Z5HX2T.js";var R=class u{constructor(t,s,o){this.store=t;this.projectService=s;this.manualEffectsService=o;console.log("NgRxDiagnosticComponent initialized")}customActionType="[Custom] Test Action";loading=!1;projectsCount=0;projectsJson="";logs="";ngOnInit(){this.addLog("Component initialized"),this.store.select(N).subscribe(t=>{this.loading=t,this.addLog(`Loading state changed: ${t}`)}),this.store.select(M).subscribe(t=>{this.projectsCount=t.length,this.projectsJson=JSON.stringify(t,null,2),this.addLog(`Projects updated: ${t.length} items`)}),this.store.actionsObserver.subscribe(t=>{this.addLog(`Action dispatched: ${t.type}`)})}dispatchLoadProjects(){this.addLog("Dispatching loadProjects action");let t=j();this.addLog(`Action type: ${t.type}`),this.store.dispatch(t)}directApiCall(){this.addLog("Making direct API call to get projects"),this.projectService.getProjects().subscribe({next:t=>{this.addLog(`API call successful: ${t.length} projects received`)},error:t=>{this.addLog(`API call failed: ${t.message}`)}})}dispatchCustomAction(){this.addLog(`Dispatching custom action: ${this.customActionType}`),this.store.dispatch({type:this.customActionType})}addLog(t){let s=new Date().toISOString().substr(11,8);this.logs=`[${s}] ${t}
${this.logs}`,console.log(`[NgRxDiagnostic] ${t}`)}static \u0275fac=function(s){return new(s||u)(a(A),a(b),a(k))};static \u0275cmp=g({type:u,selectors:[["app-ngrx-diagnostic"]],decls:32,vars:5,consts:[["header","NgRx Diagnostic Tool","styleClass","mt-4"],[1,"mb-4"],["pButton","","type","button","label","Dispatch loadProjects Action",1,"mr-2",3,"click"],["pButton","","type","button","label","Direct API Call",1,"mr-2",3,"click"],[1,"p-inputgroup","mb-2"],[1,"p-inputgroup-addon"],["type","text","pInputText","","placeholder","[Custom] Action Type",3,"ngModelChange","ngModel"],["pButton","","type","button","label","Dispatch Custom Action",1,"mr-2",3,"click"]],template:function(s,o){s&1&&(e(0,"p-card",0)(1,"div",1)(2,"h3"),n(3,"Actions"),i(),e(4,"button",2),c("click",function(){return o.dispatchLoadProjects()}),i(),e(5,"button",3),c("click",function(){return o.directApiCall()}),i()(),e(6,"div",1)(7,"h3"),n(8,"Create Custom Action"),i(),e(9,"div",4)(10,"span",5),n(11,"Action Type"),i(),e(12,"input",6),S("ngModelChange",function(p){return f(o.customActionType,p)||(o.customActionType=p),p}),i()(),e(13,"button",7),c("click",function(){return o.dispatchCustomAction()}),i()(),e(14,"div",1)(15,"h3"),n(16,"Store State"),i(),e(17,"div")(18,"h4"),n(19),i(),e(20,"h4"),n(21),i()()(),e(22,"div",1)(23,"h3"),n(24,"Projects Data"),i(),e(25,"pre"),n(26),i()(),e(27,"div",1)(28,"h3"),n(29,"Logs"),i(),e(30,"pre"),n(31),i()()()),s&2&&(r(12),h("ngModel",o.customActionType),r(7),d("Loading: ",o.loading,""),r(2),d("Projects Count: ",o.projectsCount,""),r(5),m(o.projectsJson),r(5),m(o.logs))},dependencies:[C,D,x,y,v,T,L,E,P,_,I],encapsulation:2})};export{R as NgRxDiagnosticComponent};
