// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreeViewApp.Data;

#nullable disable

namespace TreeViewApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("TreeViewApp.Models.EnumValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("EnumValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000802"),
                            Description = "Payment using credit card",
                            FieldId = new Guid("00000000-0000-0000-0000-000000000801"),
                            Name = "Credit Card",
                            Value = "CreditCard"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000803"),
                            Description = "Payment using debit card",
                            FieldId = new Guid("00000000-0000-0000-0000-000000000801"),
                            Name = "Debit Card",
                            Value = "DebitCard"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000804"),
                            Description = "Direct bank transfer payment",
                            FieldId = new Guid("00000000-0000-0000-0000-000000000801"),
                            Name = "Bank Transfer",
                            Value = "BankTransfer"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000805"),
                            Description = "Payment using digital wallet (PayPal, Apple Pay, etc.)",
                            FieldId = new Guid("00000000-0000-0000-0000-000000000801"),
                            Name = "Digital Wallet",
                            Value = "DigitalWallet"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000806"),
                            Description = "Payment using cryptocurrency",
                            FieldId = new Guid("00000000-0000-0000-0000-000000000801"),
                            Name = "Cryptocurrency",
                            Value = "Cryptocurrency"
                        });
                });

            modelBuilder.Entity("TreeViewApp.Models.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentFieldId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("ParentFieldId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000501"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "0",
                            Description = "Payment amount in smallest currency unit",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageId = new Guid("00000000-0000-0000-0000-000000000401"),
                            Name = "Amount",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000502"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "USD",
                            Description = "Three-letter currency code (ISO 4217)",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageId = new Guid("00000000-0000-0000-0000-000000000401"),
                            Name = "Currency",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000503"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Unique identifier for the transaction",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageId = new Guid("00000000-0000-0000-0000-000000000401"),
                            Name = "TransactionId",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000504"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Payment description",
                            IsRequired = false,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageId = new Guid("00000000-0000-0000-0000-000000000401"),
                            Name = "Description",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000505"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Transaction timestamp",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageId = new Guid("00000000-0000-0000-0000-000000000401"),
                            Name = "Timestamp",
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000601"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Customer information",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageId = new Guid("00000000-0000-0000-0000-000000000401"),
                            Name = "Customer",
                            Type = 6
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000602"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Customer first name",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FirstName",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000601"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000603"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Customer last name",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LastName",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000601"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000604"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Customer email address",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Email",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000601"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000605"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Customer phone number",
                            IsRequired = false,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Phone",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000601"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000606"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Customer address information",
                            IsRequired = false,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Address",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000601"),
                            Type = 6
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000701"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Customer shipping address",
                            IsRequired = false,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ShippingAddress",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000606"),
                            Type = 6
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000702"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Street address",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Street",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000701"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000703"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "City",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "City",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000701"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000704"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "",
                            Description = "Postal code / ZIP",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PostalCode",
                            ParentFieldId = new Guid("00000000-0000-0000-0000-000000000701"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000801"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultValue = "CreditCard",
                            Description = "Method of payment",
                            IsRequired = true,
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageId = new Guid("00000000-0000-0000-0000-000000000401"),
                            Name = "PaymentMethod",
                            Type = 5
                        });
                });

            modelBuilder.Entity("TreeViewApp.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RootId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RootId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000401"),
                            CreatedDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Request to process a payment transaction",
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Process Payment",
                            RootId = new Guid("00000000-0000-0000-0000-000000000101")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000402"),
                            CreatedDate = new DateTime(2024, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Response from payment processor",
                            LastModifiedDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Payment Response",
                            RootId = new Guid("00000000-0000-0000-0000-000000000101")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000403"),
                            CreatedDate = new DateTime(2024, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Request to refund a processed payment",
                            LastModifiedDate = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Payment Refund",
                            RootId = new Guid("00000000-0000-0000-0000-000000000101")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000404"),
                            CreatedDate = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Response from payment processor for refund",
                            LastModifiedDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Refund Response",
                            RootId = new Guid("00000000-0000-0000-0000-000000000101")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000405"),
                            CreatedDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Request to check payment status",
                            LastModifiedDate = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Payment Status",
                            RootId = new Guid("00000000-0000-0000-0000-000000000101")
                        });
                });

            modelBuilder.Entity("TreeViewApp.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comprehensive API integration platform with support for multiple third-party services",
                            LastModifiedDate = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "API Integration Platform"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Scalable B2B/B2C e-commerce system with inventory management and payment processing",
                            LastModifiedDate = new DateTime(2025, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Enterprise E-Commerce System"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedDate = new DateTime(2025, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Real-time data collection and analytics platform for IoT devices and sensors",
                            LastModifiedDate = new DateTime(2025, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "IoT Data Analytics Platform"
                        });
                });

            modelBuilder.Entity("TreeViewApp.Models.Root", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Roots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000101"),
                            CreatedDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Integration with multiple payment processors",
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Payment Gateway",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000102"),
                            CreatedDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Social media API integrations",
                            LastModifiedDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Social Media",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000103"),
                            CreatedDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Email delivery and tracking services",
                            LastModifiedDate = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Email Services",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000104"),
                            CreatedDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "User behavior and application analytics",
                            LastModifiedDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Analytics Services",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000105"),
                            CreatedDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "OAuth and other authentication providers",
                            LastModifiedDate = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Authentication",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000106"),
                            CreatedDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Shipping and logistics providers",
                            LastModifiedDate = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipping Services",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000107"),
                            CreatedDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Geolocation and mapping providers",
                            LastModifiedDate = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mapping Services",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000108"),
                            CreatedDate = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cloud storage and file management",
                            LastModifiedDate = new DateTime(2025, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cloud Storage",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000109"),
                            CreatedDate = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SMS and push notification providers",
                            LastModifiedDate = new DateTime(2025, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Messaging Services",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000010a"),
                            CreatedDate = new DateTime(2025, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Data enrichment and validation services",
                            LastModifiedDate = new DateTime(2025, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Data Enrichment",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000201"),
                            CreatedDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Product information and categorization",
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Product Catalog",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000202"),
                            CreatedDate = new DateTime(2024, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Customer profiles and segmentation",
                            LastModifiedDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer Management",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000203"),
                            CreatedDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Order creation and fulfillment",
                            LastModifiedDate = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order Processing",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000204"),
                            CreatedDate = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Stock levels and inventory tracking",
                            LastModifiedDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Inventory Management",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000205"),
                            CreatedDate = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Payment methods and transactions",
                            LastModifiedDate = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Payment Processing",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000206"),
                            CreatedDate = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Shipping options and tracking",
                            LastModifiedDate = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipping",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000207"),
                            CreatedDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Discounts and promotional campaigns",
                            LastModifiedDate = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Promotions",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000208"),
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tax rates and calculations",
                            LastModifiedDate = new DateTime(2025, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tax Calculation",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000209"),
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Return requests and processing",
                            LastModifiedDate = new DateTime(2025, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Returns Management",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000020a"),
                            CreatedDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sales and analytics reporting",
                            LastModifiedDate = new DateTime(2025, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reporting",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000301"),
                            CreatedDate = new DateTime(2025, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "IoT device onboarding and registration",
                            LastModifiedDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Device Registration",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000302"),
                            CreatedDate = new DateTime(2025, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sensor data collection and normalization",
                            LastModifiedDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Data Collection",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000303"),
                            CreatedDate = new DateTime(2025, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Stream processing of sensor data",
                            LastModifiedDate = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Real-time Processing",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000304"),
                            CreatedDate = new DateTime(2025, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Data warehousing for historical analysis",
                            LastModifiedDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Long-term Storage",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000305"),
                            CreatedDate = new DateTime(2025, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Anomaly detection and notification",
                            LastModifiedDate = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alerting System",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000306"),
                            CreatedDate = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Data visualization and dashboards",
                            LastModifiedDate = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visualization",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000307"),
                            CreatedDate = new DateTime(2025, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Machine learning for predictive insights",
                            LastModifiedDate = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Predictive Analytics",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000308"),
                            CreatedDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Remote configuration and updates",
                            LastModifiedDate = new DateTime(2025, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Device Management",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000309"),
                            CreatedDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "User permissions and authentication",
                            LastModifiedDate = new DateTime(2025, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User Access",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000030a"),
                            CreatedDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "External API integration for IoT platform",
                            LastModifiedDate = new DateTime(2025, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "API Services",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000003")
                        });
                });

            modelBuilder.Entity("TreeViewApp.Models.EnumValue", b =>
                {
                    b.HasOne("TreeViewApp.Models.Field", "Field")
                        .WithMany("EnumValues")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("TreeViewApp.Models.Field", b =>
                {
                    b.HasOne("TreeViewApp.Models.Message", "Message")
                        .WithMany("Fields")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TreeViewApp.Models.Field", "ParentField")
                        .WithMany("ChildFields")
                        .HasForeignKey("ParentFieldId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Message");

                    b.Navigation("ParentField");
                });

            modelBuilder.Entity("TreeViewApp.Models.Message", b =>
                {
                    b.HasOne("TreeViewApp.Models.Root", "Root")
                        .WithMany("Messages")
                        .HasForeignKey("RootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Root");
                });

            modelBuilder.Entity("TreeViewApp.Models.Root", b =>
                {
                    b.HasOne("TreeViewApp.Models.Project", "Project")
                        .WithMany("Roots")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TreeViewApp.Models.Field", b =>
                {
                    b.Navigation("ChildFields");

                    b.Navigation("EnumValues");
                });

            modelBuilder.Entity("TreeViewApp.Models.Message", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("TreeViewApp.Models.Project", b =>
                {
                    b.Navigation("Roots");
                });

            modelBuilder.Entity("TreeViewApp.Models.Root", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
